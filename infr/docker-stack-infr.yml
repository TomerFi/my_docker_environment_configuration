---
version: '3.7'

x-restart-policy:
  &restart-policy
  restart_policy:
    condition: on-failure
    delay: 30s
    max_attempts: 3
    window: 30s

x-rollback-config:
  &rollback-config
  rollback_config:
    parallelism: 1
    delay: 30s
    failure_action: continue
    monitor: 60s
    max_failure_ratio: 1
    order: stop-first

x-update-config:
  &update-config
  update_config:
    parallelism: 1
    delay: 30s
    failure_action: pause
    monitor: 60s
    max_failure_ratio: 1
    order: stop-first

secrets:
  mqtt_test_user_secret:
    file: secrets/.secret_mqtt_test_user
  mqtt_test_password_secret:
    file: secrets/.secret_mqtt_test_password

networks:
  tomfi_mosquitto_net:
    driver: overlay
    labels:
      info.tomfi.schemas.docker.network.name: "Mosquitto mqtt network."
      info.tomfi.schemas.docker.network.description: "Use for internal services interacting with Mosquitto mqtt."
    name: tomfi_mosquitto_net
    driver_opts:
      com.docker.network.driver.mtu: 1400

services:
  mosquitto:
    image: eclipse-mosquitto:1.6.6
    init: true
    secrets:
      - mqtt_test_user_secret
      - mqtt_test_password_secret
    environment:
      - TESTING_USER_FILE=/run/secrets/mqtt_test_user_secret
      - TESTING_PASSWORD_FILE=/run/secrets/mqtt_test_password_secret
    ports:
      - target: 1883
        published: 1883
        protocol: tcp
        mode: host
    volumes:
      - /opt/mosquitto/config:/mosquitto/config:ro
      - /opt/mosquitto/data:/mosquitto/data:rw
      - /opt/mosquitto/log:/mosquitto/log:rw
    networks:
      tomfi_mosquitto_net:
    labels:
      info.tomfi.schemas.docker.container.name: "Mosquitto MQTT Broker."
      info.tomfi.schemas.docker.container.description: "MQTT broker for tomfi services."
    deploy:
      endpoint_mode: vip
      mode: replicated
      replicas: 1
      labels:
        info.tomfi.schemas.docker.service.name: "Mosquitto MQTT Broker."
        info.tomfi.schemas.docker.service.description: "MQTT broker for tomfi services."
      placement:
        constraints:
          - node.hostname == docker_station
      <<: *restart-policy
      <<: *rollback-config
      <<: *update-config
    healthcheck:
      test: ["CMD-SHELL", "if ! mosquitto_sub -t '$$SYS/#' -C 1 -u $$(cat $$TESTING_USER_FILE) -P $$(cat $$TESTING_PASSWORD_FILE) | grep -q Error; then echo 'healthcheck OK'; exit 0; else echo 'healthcheck ERROR'; exit 1; fi"]
      interval: 5m
      timeout: 10s
      retries: 3
      start_period: 0s
